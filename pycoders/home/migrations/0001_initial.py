# Generated by Django 2.1.7 on 2019-02-15 18:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('rating', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=25)),
                ('last_name', models.CharField(blank=True, max_length=25)),
                ('email', models.EmailField(blank=True, max_length=70)),
                ('contact_no', models.IntegerField()),
                ('address', models.CharField(blank=True, max_length=100)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('dob', models.DateTimeField(blank=True)),
                ('friends', models.ManyToManyField(blank=True, related_name='_friends', to='home.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField()),
                ('price', models.IntegerField()),
                ('dicount', models.FloatField()),
                ('rating', models.IntegerField()),
                ('delivery', models.IntegerField()),
                ('brand', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='home.Brand')),
                ('category', models.ManyToManyField(blank=True, related_name='products', to='home.Category')),
                ('history', models.ManyToManyField(blank=True, related_name='products', to='home.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('location', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('contact_no', models.IntegerField()),
                ('brand', models.ManyToManyField(related_name='stores', to='home.Brand')),
                ('customers', models.ManyToManyField(related_name='stores', to='home.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='TimeStamp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_purchased', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='date_purchased', to='home.Customer')),
                ('product', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='date_purchased', to='home.Product')),
            ],
        ),
        migrations.AddField(
            model_name='customer',
            name='history',
            field=models.ManyToManyField(blank=True, related_name='customers', to='home.Product'),
        ),
        migrations.AddField(
            model_name='customer',
            name='wishlist',
            field=models.ManyToManyField(blank=True, related_name='customers_wishlist', to='home.Product'),
        ),
        migrations.AddField(
            model_name='brand',
            name='categories_active',
            field=models.ManyToManyField(related_name='brands', to='home.Category'),
        ),
        migrations.AddField(
            model_name='brand',
            name='customers',
            field=models.ManyToManyField(related_name='brands', to='home.Customer'),
        ),
    ]
